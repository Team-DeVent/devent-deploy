<!DOCTYPE html>
<html lang="ko">
    {{> head}}
  <body>
    {{> navbar}}


    <header class="bg-dark py-5">
        <div class="container px-5 pt-4 pb-2">
            <div class="row gx-5 justify-content-center">
                <div class="col-lg-6">
                    <div class="text-center my-5">
                        <h1 class="display-5 fw-bolder text-white font-weight-lg mb-2">Deploy</h1>
                        <p class="lead text-white-50 font-weight-md mb-4" id="intro">자동 배포의 제왕
                        </p>



                    </div>
                </div>
            </div>
        </div>
    </header>


    
    <section class="bg-dark py-3" id="features">
        <div class="container-fluid px-4 my-5">
            <div class="row gx-5">
                <div class="col-lg-12">

                        <h1 class="display-5 fw-bolder text-white font-weight-lg mb-2">디플로이, 가려진 목소리.</h1>
                        <p class="lead text-white-50 font-weight-md mb-4" id="intro">
                            디플로이 프로젝트는 자동 배포 서비스 입니다.
                            깃허브 웹훅을 받아 도커 컨테이너를 생성하고 배포하는 과정을 통합하며 환상적인 호흡을 자랑하죠.
                            그 누구도 따라올 수 없는 담대함 속에 가려진 스마트함을 뽐내며 서비스의 완성도를 끌어올려줍니다.
                            이젠, 데벤트 디플로이의 시대라고 해도 무방할 정도죠.
                        </p>

                        <h1 class="display-5 fw-bolder text-white font-weight-lg mb-2">가능성을 넘어, 위대한 숲으로.</h1>
                        <p class="lead text-white-50 font-weight-md mb-4" id="intro">
                            잠깐, 저 디플로이. 지나갈게요.
                            마치 한 컷의 명장면을 보듯 디플로이의 맹활약은 서비스의 탄생부터 시작합니다.
                            장인 정신으로 만들어 놓은 서비스가 만들 때 모습 그대로 여러분들에게 전달될 수 있도록 최상의 상태를 유지합니다.
                            데벤트가 가지고 있는 리소스와 놀라움을 한 방울도 놓치지않고 전달할 수 있도록, 디플로이는 최선을 다하고 있죠.
                        </p>

                        <h1 class="display-5 fw-bolder text-white font-weight-lg mb-2">이젠, 디플로이의 시대.</h1>
                        <p class="lead text-white-50 font-weight-md mb-4" id="intro">
                            데벤트의 수 많은 역작 뒤에 숨겨진 비결. 궁금하신가요?
                            데벤트의 모든 배포과정을 통합하는데에 있어 가장 중요한 요소는 '안정성' 입니다.
                            배포 과정에서 실수 하나 용납되지 않도록, 서버가 최상의 상태를 유지하며 최고의 상태를 맛볼 수 있게 준비해 드렸습니다.
                            깃허브의 한 커밋으로부터 시작된 험난한 여정을 함께하실 준비가 되셨나요?
                        </p>

                        <h1 class="display-5 fw-bolder text-white font-weight-lg mb-2">한 줄기의 변경.</h1>
                        <p class="lead text-white-50 font-weight-md mb-4" id="intro">
                            데벤트가 서비스 만드는데에 적어도 2일에서 길게는 6개월 까지, 엄청난 시간과 노력이 소요됩니다.
                            간식처럼 간단한 서비스부터 뷔페를 보듯 장엄한 서비스까지 디플로이는 모두 커버해야 합니다.
                            그리고 그 시작은 언제나 한 줄의 코드 입니다.
                            한 줄의 코드가 한 줄기의 변경으로, 코드의 변경이 모두 통합되기 까지. 디플로이는 그 과정을 웹훅을 기다리며 하루, 이틀 언제나 기다립니다.
                        </p>

                        <h1 class="display-5 fw-bolder text-white font-weight-lg mb-2">기다림의 끝은 요리의 완성.</h1>
                        <p class="lead text-white-50 font-weight-md mb-4" id="intro">
                            지구촌에서 돌아가는 컴퓨터의 숫자처럼 여러분의 모든 정보가 담겨있는 '서버'라는 공간은 그야말로 거대합니다.
                            식당을 예시로 들면, 여러분이 구글을 방문하기 위해서 구글 레스토랑에 진입합니다.
                            카운터에서 주문을 받고 음식이 오는 그 과정은 요라의 완성과 직결되기 때문에 너무나 중요합니다.

                            이처럼 놀라운 서사를 완성하기 위해 디플로이는 주문을 받고 도커 컨테이너를 실행하게 되죠.
                        </p>

                        <h1 class="display-5 fw-bolder text-white font-weight-lg mb-2">크크크 행복의 시간.</h1>
                        <p class="lead text-white-50 font-weight-md mb-4" id="intro">
                            세상에서 가장 행복한 순간, 바로 요리가 완성되는 순간입니다.
                            행복하쥬라는 탄성이 절로 나오기 까지 디플로이의 순간은 지금부터 입니다.
                            도커 컨테이너를 생성하고 검수하는 과정을 거쳐 완성도 평가, 배포 까지 그야말로 대규모 전쟁을 방물케 합니다.
                            여기 저기서 온갖 메세지와 알림이 오가며 사용자의 반응을 확인하면서 저, 디플로이 셰프는 만족합니다.

                            여러분, 행복하세요.
                        </p>
                </div>

            </div>
        </div>
    </section>


 

    {{> footer}}

    <script>
        // Test Ground

        //getFeed(1)
        getFeeeeeeeeeeed()
        try {
            let token = getToken('user')
            if (checkToken(token)) {
                document.querySelector("#login_box").innerHTML = `<button class="btn btn-danger font-weight-md text-light btn-lg px-4 btn-rounded" onclick="logout()"><i class="fas fa-user-minus"></i> 로그아웃</button>`
                document.querySelector("#intro").innerText = '사용자로 로그인 완료'
            }
        } catch (error) {
            
        }

        

        async function getFeeeeeeeeeeed() {
            let data = await getFeedRange(0)

            document.querySelector('#logs').innerHTML = JSON.stringify(data)
        }

        async function appendFeeeeeeeeeeed() {
            await insertFeed(document.querySelector("#exampleFormControlTextarea1").value)

            setTimeout(() => {
                Swal.fire({
                    icon: 'success',
                    title: '피드 작성 완료',
                    showConfirmButton: false,
                    timer: 1000
                })
            }, 300);
        }
    </script>

  </body>
</html>